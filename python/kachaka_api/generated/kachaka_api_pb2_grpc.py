# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import kachaka_api_pb2 as kachaka__api__pb2


class KachakaApiStub(object):
    """Services
    """

    def __init__(self, channel: grpc.Channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetRobotSerialNumber = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetRobotSerialNumber',
                request_serializer=kachaka__api__pb2.GetRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetRobotSerialNumberResponse.FromString,
                )
        self.GetRobotVersion = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetRobotVersion',
                request_serializer=kachaka__api__pb2.GetRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetRobotVersionResponse.FromString,
                )
        self.GetRobotPose = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetRobotPose',
                request_serializer=kachaka__api__pb2.GetRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetRobotPoseResponse.FromString,
                )
        self.GetPngMap = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetPngMap',
                request_serializer=kachaka__api__pb2.GetRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetPngMapResponse.FromString,
                )
        self.GetBatteryInfo = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetBatteryInfo',
                request_serializer=kachaka__api__pb2.GetRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetBatteryInfoResponse.FromString,
                )
        self.GetObjectDetection = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetObjectDetection',
                request_serializer=kachaka__api__pb2.GetRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetObjectDetectionResponse.FromString,
                )
        self.GetObjectDetectionFeatures = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetObjectDetectionFeatures',
                request_serializer=kachaka__api__pb2.GetRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetObjectDetectionFeaturesResponse.FromString,
                )
        self.GetRosImu = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetRosImu',
                request_serializer=kachaka__api__pb2.GetRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetRosImuResponse.FromString,
                )
        self.GetRosOdometry = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetRosOdometry',
                request_serializer=kachaka__api__pb2.GetRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetRosOdometryResponse.FromString,
                )
        self.GetRosLaserScan = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetRosLaserScan',
                request_serializer=kachaka__api__pb2.GetRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetRosLaserScanResponse.FromString,
                )
        self.GetFrontCameraRosCameraInfo = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetFrontCameraRosCameraInfo',
                request_serializer=kachaka__api__pb2.GetRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetFrontCameraRosCameraInfoResponse.FromString,
                )
        self.GetFrontCameraRosImage = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetFrontCameraRosImage',
                request_serializer=kachaka__api__pb2.GetRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetFrontCameraRosImageResponse.FromString,
                )
        self.GetFrontCameraRosCompressedImage = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetFrontCameraRosCompressedImage',
                request_serializer=kachaka__api__pb2.GetRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetFrontCameraRosCompressedImageResponse.FromString,
                )
        self.GetBackCameraRosCameraInfo = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetBackCameraRosCameraInfo',
                request_serializer=kachaka__api__pb2.GetRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetBackCameraRosCameraInfoResponse.FromString,
                )
        self.GetBackCameraRosImage = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetBackCameraRosImage',
                request_serializer=kachaka__api__pb2.GetRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetBackCameraRosImageResponse.FromString,
                )
        self.GetBackCameraRosCompressedImage = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetBackCameraRosCompressedImage',
                request_serializer=kachaka__api__pb2.GetRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetBackCameraRosCompressedImageResponse.FromString,
                )
        self.GetTofCameraRosCameraInfo = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetTofCameraRosCameraInfo',
                request_serializer=kachaka__api__pb2.GetRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetTofCameraRosCameraInfoResponse.FromString,
                )
        self.GetTofCameraRosImage = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetTofCameraRosImage',
                request_serializer=kachaka__api__pb2.GetRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetTofCameraRosImageResponse.FromString,
                )
        self.GetTofCameraRosCompressedImage = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetTofCameraRosCompressedImage',
                request_serializer=kachaka__api__pb2.GetRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetTofCameraRosCompressedImageResponse.FromString,
                )
        self.GetRobotErrorCodeJson = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetRobotErrorCodeJson',
                request_serializer=kachaka__api__pb2.EmptyRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetRobotErrorCodeJsonResponse.FromString,
                )
        self.GetError = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetError',
                request_serializer=kachaka__api__pb2.GetRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetErrorResponse.FromString,
                )
        self.StartCommand = channel.unary_unary(
                '/kachaka_api.KachakaApi/StartCommand',
                request_serializer=kachaka__api__pb2.StartCommandRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.StartCommandResponse.FromString,
                )
        self.CancelCommand = channel.unary_unary(
                '/kachaka_api.KachakaApi/CancelCommand',
                request_serializer=kachaka__api__pb2.EmptyRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.CancelCommandResponse.FromString,
                )
        self.GetCommandState = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetCommandState',
                request_serializer=kachaka__api__pb2.GetRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetCommandStateResponse.FromString,
                )
        self.GetLastCommandResult = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetLastCommandResult',
                request_serializer=kachaka__api__pb2.GetRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetLastCommandResultResponse.FromString,
                )
        self.Proceed = channel.unary_unary(
                '/kachaka_api.KachakaApi/Proceed',
                request_serializer=kachaka__api__pb2.EmptyRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.ProceedResponse.FromString,
                )
        self.GetLocations = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetLocations',
                request_serializer=kachaka__api__pb2.GetRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetLocationsResponse.FromString,
                )
        self.GetShelves = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetShelves',
                request_serializer=kachaka__api__pb2.GetRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetShelvesResponse.FromString,
                )
        self.GetMovingShelfId = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetMovingShelfId',
                request_serializer=kachaka__api__pb2.GetRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetMovingShelfIdResponse.FromString,
                )
        self.ResetShelfPose = channel.unary_unary(
                '/kachaka_api.KachakaApi/ResetShelfPose',
                request_serializer=kachaka__api__pb2.ResetShelfPoseRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.ResetShelfPoseResponse.FromString,
                )
        self.SetAutoHomingEnabled = channel.unary_unary(
                '/kachaka_api.KachakaApi/SetAutoHomingEnabled',
                request_serializer=kachaka__api__pb2.SetAutoHomingEnabledRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.SetAutoHomingEnabledResponse.FromString,
                )
        self.GetAutoHomingEnabled = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetAutoHomingEnabled',
                request_serializer=kachaka__api__pb2.GetRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetAutoHomingEnabledResponse.FromString,
                )
        self.SetManualControlEnabled = channel.unary_unary(
                '/kachaka_api.KachakaApi/SetManualControlEnabled',
                request_serializer=kachaka__api__pb2.SetManualControlEnabledRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.SetManualControlEnabledResponse.FromString,
                )
        self.GetManualControlEnabled = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetManualControlEnabled',
                request_serializer=kachaka__api__pb2.GetRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetManualControlEnabledResponse.FromString,
                )
        self.SetFrontTorchIntensity = channel.unary_unary(
                '/kachaka_api.KachakaApi/SetFrontTorchIntensity',
                request_serializer=kachaka__api__pb2.SetFrontTorchIntensityRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.SetFrontTorchIntensityResponse.FromString,
                )
        self.SetBackTorchIntensity = channel.unary_unary(
                '/kachaka_api.KachakaApi/SetBackTorchIntensity',
                request_serializer=kachaka__api__pb2.SetBackTorchIntensityRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.SetBackTorchIntensityResponse.FromString,
                )
        self.SetRobotVelocity = channel.unary_unary(
                '/kachaka_api.KachakaApi/SetRobotVelocity',
                request_serializer=kachaka__api__pb2.SetRobotVelocityRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.SetRobotVelocityResponse.FromString,
                )
        self.ActivateLaserScan = channel.unary_unary(
                '/kachaka_api.KachakaApi/ActivateLaserScan',
                request_serializer=kachaka__api__pb2.ActivateLaserScanRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.ActivateLaserScanResponse.FromString,
                )
        self.GetMapList = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetMapList',
                request_serializer=kachaka__api__pb2.GetRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetMapListResponse.FromString,
                )
        self.GetCurrentMapId = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetCurrentMapId',
                request_serializer=kachaka__api__pb2.GetRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetCurrentMapIdResponse.FromString,
                )
        self.LoadMapPreview = channel.unary_unary(
                '/kachaka_api.KachakaApi/LoadMapPreview',
                request_serializer=kachaka__api__pb2.LoadMapPreviewRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.LoadMapPreviewResponse.FromString,
                )
        self.SwitchMap = channel.unary_unary(
                '/kachaka_api.KachakaApi/SwitchMap',
                request_serializer=kachaka__api__pb2.SwitchMapRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.SwitchMapResponse.FromString,
                )
        self.ExportMap = channel.unary_stream(
                '/kachaka_api.KachakaApi/ExportMap',
                request_serializer=kachaka__api__pb2.ExportMapRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.ExportMapResponse.FromString,
                )
        self.ImportMap = channel.stream_unary(
                '/kachaka_api.KachakaApi/ImportMap',
                request_serializer=kachaka__api__pb2.ImportMapRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.ImportMapResponse.FromString,
                )
        self.GetShortcuts = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetShortcuts',
                request_serializer=kachaka__api__pb2.GetRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetShortcutsResponse.FromString,
                )
        self.StartShortcutCommand = channel.unary_unary(
                '/kachaka_api.KachakaApi/StartShortcutCommand',
                request_serializer=kachaka__api__pb2.StartShortcutCommandRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.StartShortcutCommandResponse.FromString,
                )
        self.GetHistoryList = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetHistoryList',
                request_serializer=kachaka__api__pb2.GetRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetHistoryListResponse.FromString,
                )
        self.GetSpeakerVolume = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetSpeakerVolume',
                request_serializer=kachaka__api__pb2.GetRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetSpeakerVolumeResponse.FromString,
                )
        self.SetSpeakerVolume = channel.unary_unary(
                '/kachaka_api.KachakaApi/SetSpeakerVolume',
                request_serializer=kachaka__api__pb2.SetSpeakerVolumeRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.SetSpeakerVolumeResponse.FromString,
                )
        self.RestartRobot = channel.unary_unary(
                '/kachaka_api.KachakaApi/RestartRobot',
                request_serializer=kachaka__api__pb2.EmptyRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.RestartRobotResponse.FromString,
                )
        self.SetEmergencyStop = channel.unary_unary(
                '/kachaka_api.KachakaApi/SetEmergencyStop',
                request_serializer=kachaka__api__pb2.EmptyRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.SetEmergencyStopResponse.FromString,
                )
        self.GetStaticTransform = channel.unary_unary(
                '/kachaka_api.KachakaApi/GetStaticTransform',
                request_serializer=kachaka__api__pb2.GetRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetStaticTransformResponse.FromString,
                )
        self.GetDynamicTransform = channel.unary_stream(
                '/kachaka_api.KachakaApi/GetDynamicTransform',
                request_serializer=kachaka__api__pb2.EmptyRequest.SerializeToString,
                response_deserializer=kachaka__api__pb2.GetDynamicTransformResponse.FromString,
                )


class KachakaApiServicer(object):
    """Services
    """

    def GetRobotSerialNumber(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRobotVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRobotPose(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPngMap(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBatteryInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetObjectDetection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetObjectDetectionFeatures(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRosImu(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRosOdometry(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRosLaserScan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFrontCameraRosCameraInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFrontCameraRosImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFrontCameraRosCompressedImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBackCameraRosCameraInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBackCameraRosImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBackCameraRosCompressedImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTofCameraRosCameraInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTofCameraRosImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTofCameraRosCompressedImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRobotErrorCodeJson(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetError(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartCommand(self, request, context):
        """Commands
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelCommand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCommandState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLastCommandResult(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Proceed(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLocations(self, request, context):
        """Locations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetShelves(self, request, context):
        """Shelves
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMovingShelfId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetShelfPose(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAutoHomingEnabled(self, request, context):
        """Auto homing
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAutoHomingEnabled(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetManualControlEnabled(self, request, context):
        """Teleop
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetManualControlEnabled(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetFrontTorchIntensity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetBackTorchIntensity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetRobotVelocity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ActivateLaserScan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMapList(self, request, context):
        """Map
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCurrentMapId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoadMapPreview(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SwitchMap(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExportMap(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ImportMap(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetShortcuts(self, request, context):
        """Shortcut
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartShortcutCommand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHistoryList(self, request, context):
        """History
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSpeakerVolume(self, request, context):
        """Robot settings
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetSpeakerVolume(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RestartRobot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetEmergencyStop(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStaticTransform(self, request, context):
        """Transform
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDynamicTransform(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_KachakaApiServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetRobotSerialNumber': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRobotSerialNumber,
                    request_deserializer=kachaka__api__pb2.GetRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetRobotSerialNumberResponse.SerializeToString,
            ),
            'GetRobotVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRobotVersion,
                    request_deserializer=kachaka__api__pb2.GetRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetRobotVersionResponse.SerializeToString,
            ),
            'GetRobotPose': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRobotPose,
                    request_deserializer=kachaka__api__pb2.GetRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetRobotPoseResponse.SerializeToString,
            ),
            'GetPngMap': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPngMap,
                    request_deserializer=kachaka__api__pb2.GetRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetPngMapResponse.SerializeToString,
            ),
            'GetBatteryInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBatteryInfo,
                    request_deserializer=kachaka__api__pb2.GetRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetBatteryInfoResponse.SerializeToString,
            ),
            'GetObjectDetection': grpc.unary_unary_rpc_method_handler(
                    servicer.GetObjectDetection,
                    request_deserializer=kachaka__api__pb2.GetRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetObjectDetectionResponse.SerializeToString,
            ),
            'GetObjectDetectionFeatures': grpc.unary_unary_rpc_method_handler(
                    servicer.GetObjectDetectionFeatures,
                    request_deserializer=kachaka__api__pb2.GetRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetObjectDetectionFeaturesResponse.SerializeToString,
            ),
            'GetRosImu': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRosImu,
                    request_deserializer=kachaka__api__pb2.GetRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetRosImuResponse.SerializeToString,
            ),
            'GetRosOdometry': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRosOdometry,
                    request_deserializer=kachaka__api__pb2.GetRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetRosOdometryResponse.SerializeToString,
            ),
            'GetRosLaserScan': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRosLaserScan,
                    request_deserializer=kachaka__api__pb2.GetRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetRosLaserScanResponse.SerializeToString,
            ),
            'GetFrontCameraRosCameraInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFrontCameraRosCameraInfo,
                    request_deserializer=kachaka__api__pb2.GetRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetFrontCameraRosCameraInfoResponse.SerializeToString,
            ),
            'GetFrontCameraRosImage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFrontCameraRosImage,
                    request_deserializer=kachaka__api__pb2.GetRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetFrontCameraRosImageResponse.SerializeToString,
            ),
            'GetFrontCameraRosCompressedImage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFrontCameraRosCompressedImage,
                    request_deserializer=kachaka__api__pb2.GetRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetFrontCameraRosCompressedImageResponse.SerializeToString,
            ),
            'GetBackCameraRosCameraInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBackCameraRosCameraInfo,
                    request_deserializer=kachaka__api__pb2.GetRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetBackCameraRosCameraInfoResponse.SerializeToString,
            ),
            'GetBackCameraRosImage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBackCameraRosImage,
                    request_deserializer=kachaka__api__pb2.GetRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetBackCameraRosImageResponse.SerializeToString,
            ),
            'GetBackCameraRosCompressedImage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBackCameraRosCompressedImage,
                    request_deserializer=kachaka__api__pb2.GetRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetBackCameraRosCompressedImageResponse.SerializeToString,
            ),
            'GetTofCameraRosCameraInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTofCameraRosCameraInfo,
                    request_deserializer=kachaka__api__pb2.GetRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetTofCameraRosCameraInfoResponse.SerializeToString,
            ),
            'GetTofCameraRosImage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTofCameraRosImage,
                    request_deserializer=kachaka__api__pb2.GetRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetTofCameraRosImageResponse.SerializeToString,
            ),
            'GetTofCameraRosCompressedImage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTofCameraRosCompressedImage,
                    request_deserializer=kachaka__api__pb2.GetRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetTofCameraRosCompressedImageResponse.SerializeToString,
            ),
            'GetRobotErrorCodeJson': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRobotErrorCodeJson,
                    request_deserializer=kachaka__api__pb2.EmptyRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetRobotErrorCodeJsonResponse.SerializeToString,
            ),
            'GetError': grpc.unary_unary_rpc_method_handler(
                    servicer.GetError,
                    request_deserializer=kachaka__api__pb2.GetRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetErrorResponse.SerializeToString,
            ),
            'StartCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.StartCommand,
                    request_deserializer=kachaka__api__pb2.StartCommandRequest.FromString,
                    response_serializer=kachaka__api__pb2.StartCommandResponse.SerializeToString,
            ),
            'CancelCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelCommand,
                    request_deserializer=kachaka__api__pb2.EmptyRequest.FromString,
                    response_serializer=kachaka__api__pb2.CancelCommandResponse.SerializeToString,
            ),
            'GetCommandState': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCommandState,
                    request_deserializer=kachaka__api__pb2.GetRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetCommandStateResponse.SerializeToString,
            ),
            'GetLastCommandResult': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLastCommandResult,
                    request_deserializer=kachaka__api__pb2.GetRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetLastCommandResultResponse.SerializeToString,
            ),
            'Proceed': grpc.unary_unary_rpc_method_handler(
                    servicer.Proceed,
                    request_deserializer=kachaka__api__pb2.EmptyRequest.FromString,
                    response_serializer=kachaka__api__pb2.ProceedResponse.SerializeToString,
            ),
            'GetLocations': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLocations,
                    request_deserializer=kachaka__api__pb2.GetRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetLocationsResponse.SerializeToString,
            ),
            'GetShelves': grpc.unary_unary_rpc_method_handler(
                    servicer.GetShelves,
                    request_deserializer=kachaka__api__pb2.GetRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetShelvesResponse.SerializeToString,
            ),
            'GetMovingShelfId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMovingShelfId,
                    request_deserializer=kachaka__api__pb2.GetRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetMovingShelfIdResponse.SerializeToString,
            ),
            'ResetShelfPose': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetShelfPose,
                    request_deserializer=kachaka__api__pb2.ResetShelfPoseRequest.FromString,
                    response_serializer=kachaka__api__pb2.ResetShelfPoseResponse.SerializeToString,
            ),
            'SetAutoHomingEnabled': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAutoHomingEnabled,
                    request_deserializer=kachaka__api__pb2.SetAutoHomingEnabledRequest.FromString,
                    response_serializer=kachaka__api__pb2.SetAutoHomingEnabledResponse.SerializeToString,
            ),
            'GetAutoHomingEnabled': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAutoHomingEnabled,
                    request_deserializer=kachaka__api__pb2.GetRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetAutoHomingEnabledResponse.SerializeToString,
            ),
            'SetManualControlEnabled': grpc.unary_unary_rpc_method_handler(
                    servicer.SetManualControlEnabled,
                    request_deserializer=kachaka__api__pb2.SetManualControlEnabledRequest.FromString,
                    response_serializer=kachaka__api__pb2.SetManualControlEnabledResponse.SerializeToString,
            ),
            'GetManualControlEnabled': grpc.unary_unary_rpc_method_handler(
                    servicer.GetManualControlEnabled,
                    request_deserializer=kachaka__api__pb2.GetRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetManualControlEnabledResponse.SerializeToString,
            ),
            'SetFrontTorchIntensity': grpc.unary_unary_rpc_method_handler(
                    servicer.SetFrontTorchIntensity,
                    request_deserializer=kachaka__api__pb2.SetFrontTorchIntensityRequest.FromString,
                    response_serializer=kachaka__api__pb2.SetFrontTorchIntensityResponse.SerializeToString,
            ),
            'SetBackTorchIntensity': grpc.unary_unary_rpc_method_handler(
                    servicer.SetBackTorchIntensity,
                    request_deserializer=kachaka__api__pb2.SetBackTorchIntensityRequest.FromString,
                    response_serializer=kachaka__api__pb2.SetBackTorchIntensityResponse.SerializeToString,
            ),
            'SetRobotVelocity': grpc.unary_unary_rpc_method_handler(
                    servicer.SetRobotVelocity,
                    request_deserializer=kachaka__api__pb2.SetRobotVelocityRequest.FromString,
                    response_serializer=kachaka__api__pb2.SetRobotVelocityResponse.SerializeToString,
            ),
            'ActivateLaserScan': grpc.unary_unary_rpc_method_handler(
                    servicer.ActivateLaserScan,
                    request_deserializer=kachaka__api__pb2.ActivateLaserScanRequest.FromString,
                    response_serializer=kachaka__api__pb2.ActivateLaserScanResponse.SerializeToString,
            ),
            'GetMapList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMapList,
                    request_deserializer=kachaka__api__pb2.GetRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetMapListResponse.SerializeToString,
            ),
            'GetCurrentMapId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCurrentMapId,
                    request_deserializer=kachaka__api__pb2.GetRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetCurrentMapIdResponse.SerializeToString,
            ),
            'LoadMapPreview': grpc.unary_unary_rpc_method_handler(
                    servicer.LoadMapPreview,
                    request_deserializer=kachaka__api__pb2.LoadMapPreviewRequest.FromString,
                    response_serializer=kachaka__api__pb2.LoadMapPreviewResponse.SerializeToString,
            ),
            'SwitchMap': grpc.unary_unary_rpc_method_handler(
                    servicer.SwitchMap,
                    request_deserializer=kachaka__api__pb2.SwitchMapRequest.FromString,
                    response_serializer=kachaka__api__pb2.SwitchMapResponse.SerializeToString,
            ),
            'ExportMap': grpc.unary_stream_rpc_method_handler(
                    servicer.ExportMap,
                    request_deserializer=kachaka__api__pb2.ExportMapRequest.FromString,
                    response_serializer=kachaka__api__pb2.ExportMapResponse.SerializeToString,
            ),
            'ImportMap': grpc.stream_unary_rpc_method_handler(
                    servicer.ImportMap,
                    request_deserializer=kachaka__api__pb2.ImportMapRequest.FromString,
                    response_serializer=kachaka__api__pb2.ImportMapResponse.SerializeToString,
            ),
            'GetShortcuts': grpc.unary_unary_rpc_method_handler(
                    servicer.GetShortcuts,
                    request_deserializer=kachaka__api__pb2.GetRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetShortcutsResponse.SerializeToString,
            ),
            'StartShortcutCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.StartShortcutCommand,
                    request_deserializer=kachaka__api__pb2.StartShortcutCommandRequest.FromString,
                    response_serializer=kachaka__api__pb2.StartShortcutCommandResponse.SerializeToString,
            ),
            'GetHistoryList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHistoryList,
                    request_deserializer=kachaka__api__pb2.GetRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetHistoryListResponse.SerializeToString,
            ),
            'GetSpeakerVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSpeakerVolume,
                    request_deserializer=kachaka__api__pb2.GetRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetSpeakerVolumeResponse.SerializeToString,
            ),
            'SetSpeakerVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.SetSpeakerVolume,
                    request_deserializer=kachaka__api__pb2.SetSpeakerVolumeRequest.FromString,
                    response_serializer=kachaka__api__pb2.SetSpeakerVolumeResponse.SerializeToString,
            ),
            'RestartRobot': grpc.unary_unary_rpc_method_handler(
                    servicer.RestartRobot,
                    request_deserializer=kachaka__api__pb2.EmptyRequest.FromString,
                    response_serializer=kachaka__api__pb2.RestartRobotResponse.SerializeToString,
            ),
            'SetEmergencyStop': grpc.unary_unary_rpc_method_handler(
                    servicer.SetEmergencyStop,
                    request_deserializer=kachaka__api__pb2.EmptyRequest.FromString,
                    response_serializer=kachaka__api__pb2.SetEmergencyStopResponse.SerializeToString,
            ),
            'GetStaticTransform': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStaticTransform,
                    request_deserializer=kachaka__api__pb2.GetRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetStaticTransformResponse.SerializeToString,
            ),
            'GetDynamicTransform': grpc.unary_stream_rpc_method_handler(
                    servicer.GetDynamicTransform,
                    request_deserializer=kachaka__api__pb2.EmptyRequest.FromString,
                    response_serializer=kachaka__api__pb2.GetDynamicTransformResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kachaka_api.KachakaApi', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class KachakaApi(object):
    """Services
    """

    @staticmethod
    def GetRobotSerialNumber(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetRobotSerialNumber',
            kachaka__api__pb2.GetRequest.SerializeToString,
            kachaka__api__pb2.GetRobotSerialNumberResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRobotVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetRobotVersion',
            kachaka__api__pb2.GetRequest.SerializeToString,
            kachaka__api__pb2.GetRobotVersionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRobotPose(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetRobotPose',
            kachaka__api__pb2.GetRequest.SerializeToString,
            kachaka__api__pb2.GetRobotPoseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPngMap(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetPngMap',
            kachaka__api__pb2.GetRequest.SerializeToString,
            kachaka__api__pb2.GetPngMapResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBatteryInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetBatteryInfo',
            kachaka__api__pb2.GetRequest.SerializeToString,
            kachaka__api__pb2.GetBatteryInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetObjectDetection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetObjectDetection',
            kachaka__api__pb2.GetRequest.SerializeToString,
            kachaka__api__pb2.GetObjectDetectionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetObjectDetectionFeatures(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetObjectDetectionFeatures',
            kachaka__api__pb2.GetRequest.SerializeToString,
            kachaka__api__pb2.GetObjectDetectionFeaturesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRosImu(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetRosImu',
            kachaka__api__pb2.GetRequest.SerializeToString,
            kachaka__api__pb2.GetRosImuResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRosOdometry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetRosOdometry',
            kachaka__api__pb2.GetRequest.SerializeToString,
            kachaka__api__pb2.GetRosOdometryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRosLaserScan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetRosLaserScan',
            kachaka__api__pb2.GetRequest.SerializeToString,
            kachaka__api__pb2.GetRosLaserScanResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFrontCameraRosCameraInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetFrontCameraRosCameraInfo',
            kachaka__api__pb2.GetRequest.SerializeToString,
            kachaka__api__pb2.GetFrontCameraRosCameraInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFrontCameraRosImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetFrontCameraRosImage',
            kachaka__api__pb2.GetRequest.SerializeToString,
            kachaka__api__pb2.GetFrontCameraRosImageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFrontCameraRosCompressedImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetFrontCameraRosCompressedImage',
            kachaka__api__pb2.GetRequest.SerializeToString,
            kachaka__api__pb2.GetFrontCameraRosCompressedImageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBackCameraRosCameraInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetBackCameraRosCameraInfo',
            kachaka__api__pb2.GetRequest.SerializeToString,
            kachaka__api__pb2.GetBackCameraRosCameraInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBackCameraRosImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetBackCameraRosImage',
            kachaka__api__pb2.GetRequest.SerializeToString,
            kachaka__api__pb2.GetBackCameraRosImageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBackCameraRosCompressedImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetBackCameraRosCompressedImage',
            kachaka__api__pb2.GetRequest.SerializeToString,
            kachaka__api__pb2.GetBackCameraRosCompressedImageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTofCameraRosCameraInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetTofCameraRosCameraInfo',
            kachaka__api__pb2.GetRequest.SerializeToString,
            kachaka__api__pb2.GetTofCameraRosCameraInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTofCameraRosImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetTofCameraRosImage',
            kachaka__api__pb2.GetRequest.SerializeToString,
            kachaka__api__pb2.GetTofCameraRosImageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTofCameraRosCompressedImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetTofCameraRosCompressedImage',
            kachaka__api__pb2.GetRequest.SerializeToString,
            kachaka__api__pb2.GetTofCameraRosCompressedImageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRobotErrorCodeJson(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetRobotErrorCodeJson',
            kachaka__api__pb2.EmptyRequest.SerializeToString,
            kachaka__api__pb2.GetRobotErrorCodeJsonResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetError(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetError',
            kachaka__api__pb2.GetRequest.SerializeToString,
            kachaka__api__pb2.GetErrorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/StartCommand',
            kachaka__api__pb2.StartCommandRequest.SerializeToString,
            kachaka__api__pb2.StartCommandResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/CancelCommand',
            kachaka__api__pb2.EmptyRequest.SerializeToString,
            kachaka__api__pb2.CancelCommandResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCommandState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetCommandState',
            kachaka__api__pb2.GetRequest.SerializeToString,
            kachaka__api__pb2.GetCommandStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLastCommandResult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetLastCommandResult',
            kachaka__api__pb2.GetRequest.SerializeToString,
            kachaka__api__pb2.GetLastCommandResultResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Proceed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/Proceed',
            kachaka__api__pb2.EmptyRequest.SerializeToString,
            kachaka__api__pb2.ProceedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLocations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetLocations',
            kachaka__api__pb2.GetRequest.SerializeToString,
            kachaka__api__pb2.GetLocationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetShelves(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetShelves',
            kachaka__api__pb2.GetRequest.SerializeToString,
            kachaka__api__pb2.GetShelvesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMovingShelfId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetMovingShelfId',
            kachaka__api__pb2.GetRequest.SerializeToString,
            kachaka__api__pb2.GetMovingShelfIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResetShelfPose(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/ResetShelfPose',
            kachaka__api__pb2.ResetShelfPoseRequest.SerializeToString,
            kachaka__api__pb2.ResetShelfPoseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAutoHomingEnabled(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/SetAutoHomingEnabled',
            kachaka__api__pb2.SetAutoHomingEnabledRequest.SerializeToString,
            kachaka__api__pb2.SetAutoHomingEnabledResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAutoHomingEnabled(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetAutoHomingEnabled',
            kachaka__api__pb2.GetRequest.SerializeToString,
            kachaka__api__pb2.GetAutoHomingEnabledResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetManualControlEnabled(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/SetManualControlEnabled',
            kachaka__api__pb2.SetManualControlEnabledRequest.SerializeToString,
            kachaka__api__pb2.SetManualControlEnabledResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetManualControlEnabled(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetManualControlEnabled',
            kachaka__api__pb2.GetRequest.SerializeToString,
            kachaka__api__pb2.GetManualControlEnabledResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetFrontTorchIntensity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/SetFrontTorchIntensity',
            kachaka__api__pb2.SetFrontTorchIntensityRequest.SerializeToString,
            kachaka__api__pb2.SetFrontTorchIntensityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetBackTorchIntensity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/SetBackTorchIntensity',
            kachaka__api__pb2.SetBackTorchIntensityRequest.SerializeToString,
            kachaka__api__pb2.SetBackTorchIntensityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetRobotVelocity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/SetRobotVelocity',
            kachaka__api__pb2.SetRobotVelocityRequest.SerializeToString,
            kachaka__api__pb2.SetRobotVelocityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ActivateLaserScan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/ActivateLaserScan',
            kachaka__api__pb2.ActivateLaserScanRequest.SerializeToString,
            kachaka__api__pb2.ActivateLaserScanResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMapList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetMapList',
            kachaka__api__pb2.GetRequest.SerializeToString,
            kachaka__api__pb2.GetMapListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCurrentMapId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetCurrentMapId',
            kachaka__api__pb2.GetRequest.SerializeToString,
            kachaka__api__pb2.GetCurrentMapIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoadMapPreview(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/LoadMapPreview',
            kachaka__api__pb2.LoadMapPreviewRequest.SerializeToString,
            kachaka__api__pb2.LoadMapPreviewResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SwitchMap(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/SwitchMap',
            kachaka__api__pb2.SwitchMapRequest.SerializeToString,
            kachaka__api__pb2.SwitchMapResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExportMap(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/kachaka_api.KachakaApi/ExportMap',
            kachaka__api__pb2.ExportMapRequest.SerializeToString,
            kachaka__api__pb2.ExportMapResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ImportMap(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/kachaka_api.KachakaApi/ImportMap',
            kachaka__api__pb2.ImportMapRequest.SerializeToString,
            kachaka__api__pb2.ImportMapResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetShortcuts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetShortcuts',
            kachaka__api__pb2.GetRequest.SerializeToString,
            kachaka__api__pb2.GetShortcutsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartShortcutCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/StartShortcutCommand',
            kachaka__api__pb2.StartShortcutCommandRequest.SerializeToString,
            kachaka__api__pb2.StartShortcutCommandResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHistoryList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetHistoryList',
            kachaka__api__pb2.GetRequest.SerializeToString,
            kachaka__api__pb2.GetHistoryListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSpeakerVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetSpeakerVolume',
            kachaka__api__pb2.GetRequest.SerializeToString,
            kachaka__api__pb2.GetSpeakerVolumeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetSpeakerVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/SetSpeakerVolume',
            kachaka__api__pb2.SetSpeakerVolumeRequest.SerializeToString,
            kachaka__api__pb2.SetSpeakerVolumeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RestartRobot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/RestartRobot',
            kachaka__api__pb2.EmptyRequest.SerializeToString,
            kachaka__api__pb2.RestartRobotResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetEmergencyStop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/SetEmergencyStop',
            kachaka__api__pb2.EmptyRequest.SerializeToString,
            kachaka__api__pb2.SetEmergencyStopResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStaticTransform(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kachaka_api.KachakaApi/GetStaticTransform',
            kachaka__api__pb2.GetRequest.SerializeToString,
            kachaka__api__pb2.GetStaticTransformResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDynamicTransform(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/kachaka_api.KachakaApi/GetDynamicTransform',
            kachaka__api__pb2.EmptyRequest.SerializeToString,
            kachaka__api__pb2.GetDynamicTransformResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
